package com.ibm.p1.dao.impl;

import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.hibernate.Session;
import org.hibernate.Transaction;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;

import com.ibm.p1.dao.DataManageDao;
import com.ibm.p1.entity.Connection;
import com.ibm.p1.entity.Fans;
import com.ibm.p1.entity.HotWords;
import com.ibm.p1.entity.Source;
import com.ibm.p1.entity.SourceOfUser;
import com.ibm.p1.entity.TotalKeyWords;
import com.ibm.p1.entity.User;

public class DataManageDaoImpl extends HibernateDaoSupport implements
		DataManageDao {

	private int num = 20;
	private List<TotalKeyWords> hotWordsList;
	private HotWords howWords;
	private List<HotWords> wordsList;
	
	public List<TotalKeyWords> getHotWordsList() {
		return hotWordsList;
	}
	public void setHotWordsList(List<TotalKeyWords> hotWordsList) {
		this.hotWordsList = hotWordsList;
	}
	public HotWords getHowWords() {
		return howWords;
	}
	public void setHowWords(HotWords howWords) {
		this.howWords = howWords;
	}
	public List<HotWords> getWordsList() {
		return wordsList;
	}
	public void setWordsList(List<HotWords> wordsList) {
		this.wordsList = wordsList;
	}
	public List<Connection> getConnections() {
		// TODO Auto-generated method stub
		
		Session session=super.getSessionFactory().getCurrentSession();
		Transaction tx=session.beginTransaction();
		String sql="select c.topic_id as {conn.topic_id}, c.uuid as {conn.uuid}, c.similarity as {conn.similarity}, c.title as {conn.title}, c.content as {conn.content} from connection c order by similarity desc limit "+num;
		List<Connection> list=session.createSQLQuery(sql).addEntity("conn",Connection.class).list();
		tx.commit();
		
		return list;
	}

	public List<HotWords> getHotWords() {
		// TODO Auto-generated method stub
		
		Session session=super.getSessionFactory().getCurrentSession();
		
		Transaction tx=session.beginTransaction();
		DateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
        String s = format1.format(new Date());
		String sql="select t.hotwords_id as {word.hotWords_id},t.word as {word.word}, t.weight as {word.weight}, t.time as {word.time}, t.date as {word.date} from (select * from hotwords h where h.date='"+s+"') t order by time desc limit 10";
		List<HotWords> list=session.createSQLQuery(sql).addEntity("word",HotWords.class).list();
		tx.commit();
		Collections.sort(list);
		return list;
	}
	///*图表chart部分开始
	@SuppressWarnings("unchecked")
	public int getNumOfConnection() {
		// TODO Auto-generated method stub
		Session session=super.getSessionFactory().getCurrentSession();
		List<Integer> numList = new ArrayList<Integer>();
		int num = 0;
		String sql = "select count(*) from Connection";
		numList = getHibernateTemplate().find(sql);
		if(numList.size()== 1){
			String str = String.valueOf(numList.get(0));
			//System.out.println("Str:"+str);
			num = Integer.valueOf(str);
		}
		return num;
	}

	@SuppressWarnings("unchecked")
	public List<Object> getTopCountNumOfConnectionKeyWords() {
		// TODO Auto-generated method stub

		
		Session session=super.getSessionFactory().getCurrentSession();
		Transaction tx=session.beginTransaction();
		String sql = "select * from (select keyword as k ,count(keyword) as c from Connection_keyWords group by keyword) t order by t.c desc";
		List numList=session.createSQLQuery(sql).list();
		tx.commit();
		
		for(int i = 0;i<numList.size();i++){
			
			Object[] os=(Object[]) numList.get(i);
			System.out.println("keyword:"+os[0]+"	count:"+os[1]);
			
		}
		
		return numList;
	}

	public int getNumOfZombieFans() {
		// TODO Auto-generated method stub
		Fans fans = new Fans();
		fans.setZombieType(1);
		List list = getHibernateTemplate().findByExample(fans);
		int num = list.size();
		return num;
	}

	public int getNumOfAllFans() {
		// TODO Auto-generated method stub
		List list = getHibernateTemplate().find("from Fans");
		int num = list.size();
		return num;
	}

	public int getNumOfNormalFans() {
		Fans fans = new Fans();
		fans.setZombieType(0);
		List list = getHibernateTemplate().findByExample(fans);
		int num = list.size();
		return num;
	}

	public List<Object> getTopCountNumOfFansKeyWords() {
		// TODO Auto-generated method stub
		String sql = "select keyword ,count(keyword) from Fans_keyWords group by keyword";
		List<Object> numList = new ArrayList<Object>();
		numList = getHibernateTemplate().find(sql);
		return numList;
	}

	public List<Object> getTotalHotWords() {
		// TODO Auto-generated method stub
		String sql = "select word ,count(word),sum(weight) from HotWords group by word";
		List<Object> numList = new ArrayList<Object>();
		numList = getHibernateTemplate().find(sql);
		for(int i = 0;i<numList.size();i++){
			Object[] object = (Object[]) numList.get(i);
			//System.out.println("Object:"+i+" "+object[0]+" "+object[1]+" "+object[2]);
		}
		return numList;
	}

	public List<java.util.Date> getDatesByHotWords(String word) {
		// TODO Auto-generated method stub
		HotWords hotWords = new HotWords();
		hotWords.setWord(word);
		String sql ="from HotWords h where h.word = ?";
		wordsList = getHibernateTemplate().find(sql, word);
		
		List<java.util.Date> dateList = new ArrayList<java.util.Date>();
		for(int i = 0;i<wordsList.size();i++){
			hotWords = wordsList.get(i);
			java.sql.Date date = hotWords.getDate();
			java.util.Date d= new java.util.Date (date.getTime());
			dateList.add(i, d);
			//System.out.println("日期的字符串："+dateList.get(i).toString());
		}
		
		return dateList;
	}
	public int getNumOfAdmin() {
		// TODO Auto-generated method stub
		String type = "admin";
		int nums = 0;
		String sql = "select count(username)from User u where u.type = '"+type+"' group by username";
		List<Object> list = new ArrayList<Object>();
		list = getHibernateTemplate().find(sql);
		if(list.size()== 1){
			String str = String.valueOf(list.get(0));
			//System.out.println("Str:"+str);
			nums = Integer.valueOf(str);
		}
		return nums;
	}
	public int getNumOfUser() {
		// TODO Auto-generated method stub
		String type = "user";
		int nums = 0;
		String sql = "select count(username)from User u where u.type = '"+type+"' group by username";
		List<Object> list = new ArrayList<Object>();
		list = getHibernateTemplate().find(sql);
		if(list.size()== 1){
			String str = String.valueOf(list.get(0));
			//System.out.println("Str:"+str);
			nums = Integer.valueOf(str);
		}
		return nums;
	}
	public int getNumOfCandidate() {
		// TODO Auto-generated method stub
		String type = "candidate";
		int nums = 0;
		String sql = "select count(username)from User u where u.type = '"+type+"' group by username";
		List<Object> list = new ArrayList<Object>();
		list = getHibernateTemplate().find(sql);
		if(list.size()== 1){
			String str = String.valueOf(list.get(0));
			nums = Integer.valueOf(str);
		}
		return nums;
	}
	
	public List<Object> getReleaseNumAndDate() {
		// TODO Auto-generated method stub
		Session session=super.getSessionFactory().getCurrentSession();
		Transaction tx=session.beginTransaction();
		String sql = "select date,count(*) from releasehistory group by date";
		List list=session.createSQLQuery(sql).list();
		tx.commit();
		
		for(int i=0;i<list.size();i++){
			Object[] obj=(Object[])list.get(i);
			
			System.out.println("date:"+obj[0]+"	count:"+obj[1]);
			
		}
		return list;
	}
	public List<Object> getReleaseNumAndUser() {
		// TODO Auto-generated method stub
		Session session=super.getSessionFactory().getCurrentSession();
		Transaction tx=session.beginTransaction();
		String sql = "select user_id,count(*) from releasehistory group by user_id";
		List numList=session.createSQLQuery(sql).list();
		tx.commit();
		
		for(int i=0;i<numList.size();i++){
			Object[] obj=(Object[])numList.get(i);
			System.out.println("user_id:"+obj[0]+"	count:"+obj[1]);
		}
		
		return numList;
	}
	public int getTotalNumOfRelease() {
		// TODO Auto-generated method stub
		Session session=super.getSessionFactory().getCurrentSession();
		Transaction tx=session.beginTransaction();
		String sql = "select count(*) from releasehistory";
		List list=session.createSQLQuery(sql).list();
		tx.commit();
		int num=0;
		if(list.size() == 1){
			String str = String.valueOf(list.get(0));
			num = Integer.valueOf(str);
		}
		return num;
	}
	public int getTotalNumOfReleaseDraft() {
		// TODO Auto-generated method stub
		Session session=super.getSessionFactory().getCurrentSession();
		Transaction tx=session.beginTransaction();
		String sql = "select count(*) from releasehistory where isDraft='1'";
		List list=session.createSQLQuery(sql).list();
		tx.commit();
		int num=0;
		if(list.size() == 1){
			String str = String.valueOf(list.get(0));
			num = Integer.valueOf(str);
		}
		return num;
	}
	
	//素材池相关  
	public int getNumOfAllSources() {
		// TODO Auto-generated method stub
		Session session=super.getSessionFactory().getCurrentSession();
		Transaction tx=session.beginTransaction();
		String sql = "select count(*) from source";
		List list=session.createSQLQuery(sql).list();
		tx.commit();
		int num=0;
		if(list.size() == 1){
			String str = String.valueOf(list.get(0));
			num = Integer.valueOf(str);
		}
		return num;
	}
	public List<Object> getSourceOfDay() {
		// TODO Auto-generated method stub
		Session session=super.getSessionFactory().getCurrentSession();
		Transaction tx=session.beginTransaction();
		String sql = "select date(created_at),count(*) from source group by date(created_at)";
		List list=session.createSQLQuery(sql).list();
		tx.commit();
		
		for(int i=0;i<list.size();i++){
			Object[] obj=(Object[])list.get(i);
			
			System.out.println("date:"+obj[0]+"	count:"+obj[1]);
			
		}
		return list;
	}
	public List<SourceOfUser> getSourceOfUser() {
		// TODO Auto-generated method stub
		
		List<SourceOfUser> sul=new ArrayList<SourceOfUser>();
		Session session=super.getSessionFactory().getCurrentSession();
		Transaction tx=session.beginTransaction();
		String sql = "select user_id from source group by user_id";
		List idList=session.createSQLQuery(sql).list();
		tx.commit();
		
		for(int i=0;i<idList.size();i++){
			Integer id=(Integer)idList.get(i);
			SourceOfUser su=new SourceOfUser();
			
			Session session1=super.getSessionFactory().getCurrentSession();
			Transaction tx1=session1.beginTransaction();
			
			sql = "select source_id,created_at from source where user_id='"+id+"'";
			List sourceList=session1.createSQLQuery(sql).list();
			tx1.commit();
			List<Source> sources=new ArrayList<Source>();
			
			for(int j=0;j<sourceList.size();j++){
				Object[] obj=(Object[])sourceList.get(j);
				Source source=new Source();
				source.setSource_id((Integer)obj[0]);
				source.setCreated_at((Timestamp)obj[1]);
				sources.add(source);
			}
			
			User user=new User();
			user.setUser_id(id);
			su.setUser(user);
			su.setSources(sources);
			su.setSourceNum(sourceList.size());

			sul.add(su);
		}
		return sul;
	}
	public List<Object> getTopCountNumOfSourceKeyWords() {
		// TODO Auto-generated method stub
		
		
		Session session=super.getSessionFactory().getCurrentSession();
		Transaction tx=session.beginTransaction();
		String sql = "select keyword,weight from source_keywords order by weight desc";
		List list=session.createSQLQuery(sql).list();
		tx.commit();
		
		for(int i=0;i<list.size();i++){
			Object[] obj=(Object[])list.get(i);
			
			System.out.println("keyword:"+obj[0]+"	weight:"+obj[1]);
			
		}
		return list;
		
	}
	
	//*/图表chart部分结束
}
